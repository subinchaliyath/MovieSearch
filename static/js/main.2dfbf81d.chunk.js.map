{"version":3,"sources":["components/MovieCard.js","components/SearchMovies.js","App.js","index.js"],"names":["movieCard","movies","history","className","class","map","movie","media_type","onClick","console","log","src","poster_path","backdrop_path","alt","title","original_title","name","original_name","date","release_date","first_air_date","Date","getFullYear","line","element","containerClassName","truncateText","text","overview","Rating","value","vote_average","precision","icon","fontSize","readOnly","SearchMovies","useState","query","setQuery","setMovies","loading","setLoading","error","setError","handleSubmit","e","a","preventDefault","url","fetch","res","json","data","results","onSubmit","htmlFor","type","onChange","target","placeholder","key","id","App","ReactDOM","render","document","getElementById"],"mappings":"8VAMe,SAASA,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,OAAmB,EAAXC,QASxC,OACI,yBAAKC,UAAU,WACP,yBAAKC,MAAM,iBAAX,OACMH,QADN,IACMA,OADN,EACMA,EAAQI,KAAI,SAACC,GAAD,MAAgC,WAArBA,EAAMC,YAC1B,yBAAKH,MAAM,aAAaI,QAAS,WAXlDC,QAAQC,IAAI,aAYQ,yBAAMC,IAAG,0DAAqDL,EAAMM,aAAeN,EAAMO,eAAiBC,IAAI,UAC9G,wBAAIX,UAAU,kBAAkBG,EAAMC,YAAa,SACnD,yBAAKJ,UAAU,kBACX,wBAAIA,UAAU,mBAAmBG,EAAMS,OAAST,EAAMU,gBAAkBV,EAAMW,MAAQX,EAAMY,cAAc,0BAAMf,UAAU,kBAAhB,KAZ5GgB,EAY8Jb,EAAMc,cAAgBd,EAAMe,eAXrM,IAAIC,KAAKH,GACRI,eAUsH,MAC1G,kBAAC,IAAD,CACIC,KAAM,EACNC,QAAQ,IACRC,mBAAmB,qBACnBC,aAAa,SACbC,KAAMtB,EAAMuB,WAEhB,yBAAK1B,UAAU,gBACX,kBAAC2B,EAAA,EAAD,CAAQb,KAAK,eAAed,UAAU,cAAc4B,MAAQzB,EAAM0B,aAAe,GAAM,EAAGC,UAAW,GAAKC,KAAM,kBAAC,IAAD,CAAiBC,SAAS,UAAUC,UAAQ,MAC5J,2BAAOjC,UAAU,eAAeG,EAAM0B,aAAe,MAtB5D,IAACb,OCRf,SAASkB,IAAgB,IAAD,EACXC,mBAAS,IADE,mBAC9BC,EAD8B,KACvBC,EADuB,OAETF,mBAAS,IAFA,mBAE9BrC,EAF8B,KAEtBwC,EAFsB,OAGPH,oBAAS,GAHF,mBAG9BI,EAH8B,KAGrBC,EAHqB,OAIXL,mBAAS,IAJE,mBAI9BM,EAJ8B,KAIvBC,EAJuB,KAM/BC,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACnBL,GAAW,GACXI,EAAEE,iBACIC,EAHa,kHAGoGX,EAHpG,iDAKCY,MAAMD,GALP,cAKXE,EALW,gBAMEA,EAAIC,OANN,OAMXC,EANW,OAOjBb,EAAUa,EAAKC,SAPE,kDASjBV,EAAS,0BACTJ,EAAU,IAVO,yBAYjBE,GAAW,GAZM,6EAAH,sDAelB,OACE,yBAAKxC,UAAU,aACb,6BACE,0BACEqD,SAAU,SAACT,GACK,KAAVR,GACFM,EAAS,IACTC,EAAaC,KAEbA,EAAEE,iBACFJ,EAAS,+BAGb1C,UAAU,eAEV,2BACEsD,QAAQ,QACRtD,UAAU,0CAFZ,eAMA,2BACEuD,KAAK,OACLzC,KAAK,QACLc,MAAOQ,EACPpC,UAAU,sCACVwD,SAAU,SAACZ,GAAD,OAAOP,EAASO,EAAEa,OAAO7B,QACnC8B,YAAY,kBAEd,4BAAQ1D,UAAU,oCAAoCuD,KAAK,UAA3D,YAIDd,GACC,uBAAGzC,UAAU,yCAAyCyC,GAGvDF,GAAW,uBAAGvC,UAAU,qBAAb,cACZ,8BACEuC,IAAYE,GACZ,6BACG3C,GAAU,kBAAC,EAAD,CAAWA,OAAQA,EAAQ6D,IAAK7D,EAAO8D,QClD/CC,MAXf,WACI,OACI,yBAAK7D,UAAU,OACX,yBAAKA,UAAU,cACX,wBAAIA,UAAU,oBAAd,gBACA,kBAACkC,EAAD,SCJhB4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2dfbf81d.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextTruncate from \"react-text-truncate\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport StarRoundedIcon from \"@material-ui/icons/StarRounded\";\r\nimport './MovieCard.css'\r\n\r\nexport default function movieCard({ movies, history }) {\r\n    const handleClick = (movie) => {\r\n        console.log(\"clicked\");\r\n      }\r\n    \r\n      const getReleaseYear = (date) => {\r\n        let year = new Date(date);\r\n        return year.getFullYear();\r\n      }\r\n    return (\r\n        <div className=\"results\">\r\n                <div class=\"results__list\">\r\n                    { movies?.map((movie) => movie.media_type !== 'person' &&\r\n                        (<div class=\"list__item\" onClick={() => handleClick(movie)}>\r\n                            <img  src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path || movie.backdrop_path}`} alt=\"movie\" />\r\n                            <h5 className=\"list__itemType\">{movie.media_type|| 'movie'}</h5>\r\n                            <div className=\"list__itemInfo\">\r\n                                <h5 className=\"list__itemTitle\">{movie.title || movie.original_title || movie.name || movie.original_name}<span className=\"list__itemYear\">({getReleaseYear(movie.release_date || movie.first_air_date)})</span></h5>\r\n                                <TextTruncate\r\n                                    line={2}\r\n                                    element=\"p\"\r\n                                    containerClassName=\"list__itemOverview\"\r\n                                    truncateText=\"â€¦\"\r\n                                    text={movie.overview}\r\n                                />\r\n                                <div className=\"list__rating\">\r\n                                    <Rating name=\"movie-rating\" className=\"movieRating\" value={(movie.vote_average / 2) || 0} precision={0.5} icon={<StarRoundedIcon fontSize=\"inherit\" readOnly />}/>\r\n                                    <small className=\"list__likes\">{movie.vote_average / 2}</small>\r\n                                </div>\r\n                            </div>\r\n                        </div> )\r\n                    )}\r\n                </div>\r\n            </div>\r\n      );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nexport default function SearchMovies() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    setLoading(true);\r\n    e.preventDefault();\r\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=8db0e12bdf479f17ac2154b6a7de1caa&language=en-US&query=${query}&page=1&include_adult=false`;\r\n    try {\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      setMovies(data.results);\r\n    } catch (err) {\r\n      setError(\"Failed to fetch movies\");\r\n      setMovies([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div>\r\n        <form\r\n          onSubmit={(e) => {\r\n            if (query !== \"\") {\r\n              setError(\"\");\r\n              handleSubmit(e);\r\n            } else {\r\n              e.preventDefault();\r\n              setError(\"You missed the movie name\");\r\n            }\r\n          }}\r\n          className=\"form-inline\"\r\n        >\r\n          <label\r\n            htmlFor=\"query\"\r\n            className=\"col-md-2 offset-md-1 p-0 mr-sm-3 mb-2 \"\r\n          >\r\n            Movie Name:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"query\"\r\n            value={query}\r\n            className=\"form-control col-md-5  mr-sm-3 mb-2\"\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            placeholder=\"i.e. Iron Man\"\r\n          />\r\n          <button className=\"btn btn-dark  col-md-2 col-3 mb-2\" type=\"submit\">\r\n            Search!\r\n          </button>\r\n        </form>\r\n        {error && (\r\n          <p className=\"alert alert-info col-md-3 offset-md-7\">{error}</p>\r\n        )}\r\n\r\n        {loading && <p className=\"alert alert-info \">Loading...</p>}\r\n        <br />\r\n        {!loading && !error && (\r\n          <div>\r\n            {movies && <MovieCard movies={movies} key={movies.id} />}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport SearchMovies from './components/SearchMovies';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"container \">\r\n                <h1 className=\"text-center mt-1\">MOVIE SEARCH</h1>\r\n                <SearchMovies />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}